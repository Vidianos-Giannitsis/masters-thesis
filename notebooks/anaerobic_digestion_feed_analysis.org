#+TITLE: Αναλύσεις της τροφοδοσίας της αναερόβιας χώνευσης

\begin{abstract}
Την περίοδο 22-26 Μαρτίου έγιναν κάποια πειράματα υδρόλυσης με σκοπό την προετοιμασία ενός υποστρώματος για αναερόβια χώνευση. Γενικά, οι συνθήκες ήταν πλήρως αντίστοιχες με το πείραμα 28/11 το οποίο ήταν το πείραμα υδρόλυσης στους 40 \( ^oC \). Όμως, έγιναν λίγο διαφορετικές αναλύσεις. Για να τροφοδοτηθεί σε αναερόβια χώνευση, θέλουμε COD, TS, VS κυρίως. Αλλά επίσης, χρησιμοποιήθηκε ως ευκαιρία να κάνουμε εκτός από διαλυτό COD και ολικό. Στα παρακάτω code blocks φαίνεται η ανάλυση των δεδομένων αυτών.
\end{abstract}

* Table of Contents                                            :TOC:noexport:
- [[#dependencies][Dependencies]]
- [[#cod-data-reading-and-processing][COD data reading and processing]]
- [[#plotting][Plotting]]

* Dependencies
Καθώς το project αυτό είναι δομημένο με το πακέτο DrWatson της Julia για να κάνει facilitate reproducibility, πρέπει σε όλα τα αρχεία να υπάρχουν τα lines που ενεργοποιούν το DrWatson και πηγαίνουν στο κατάλληλο project. Έπειτα, είναι επίσης απαραίτητο να κάνουμε include κάποια functions για την ανάλυση των δεδομένων το οποίο υπάρχει στο src directory και είναι amply documented εκεί.

*dependencies*
#+NAME: dependencies
#+BEGIN_SRC julia
  using DrWatson
  @quickactivate "Masters_Thesis"
  include(srcdir("cod_balance.jl"))
  include(srcdir("filenames.jl"))
#+END_SRC

* COD data reading and processing
Για τα πειράματα αυτά υπάρχουν δεδομένα για την απορρόφηση του COD στα αντίστοιχα CSVs. Αυτά είναι δομημένα ώστε να μπορούν να διαβαστούν πολύ εύκολα από το function ~process_cod_data~. Αρχικά διαβάζουμε τα δεδομένα αυτά. Όμως, αφαιρούμε το τελευταίο στοιχείο κάθε διανύσματος με ένα ~pop!~ operation καθώς στο reading των δεδομένων είχε δωθεί το blank ως το τελευταίο στοιχείο κάθε πίνακα.

#+NAME: cod_data_reading
#+BEGIN_SRC julia

  date = "22_03"

  dilution = "20"
  cod_20_22_03 = process_cod_data(dilution, date, dilution = parse(Int64, dilution))
  pop!(cod_20_22_03)
  dilution = "50"
  cod_50_22_03 = process_cod_data(dilution, date, dilution = parse(Int64, dilution))
  pop!(cod_50_22_03)
  dilution = "100"
  cod_100_22_03 = process_cod_data(dilution, date, dilution = parse(Int64, dilution))
  pop!(cod_100_22_03)

  date = "26_03"
  dilution = "20"
  cod_20_26_03 = process_cod_data(dilution, date, dilution = parse(Int64, dilution))
  pop!(cod_20_26_03)
  dilution = "50"
  cod_50_26_03 = process_cod_data(dilution, date, dilution = parse(Int64, dilution))
  pop!(cod_50_26_03)
#+END_SRC

#+RESULTS: cod_data_reading
: -966.9499999999999

Έπειτα, κάνουμε λίγο reprocess τα δεδομένα αυτά. Σκοπός είναι να κάνουμε decouple τις αναλύσεις των καθαρών food waste από αυτές των υδρολυμάτων στο πείραμα 22/03 και να βάλουμε σε ένα matrix δίπλα-δίπλα soluble και total COD. Αυτά φαίνονται στο παρακάτω code block. Επίσης, για το COD του αρχικού υποστρώματος, θέλουμε να το αποθηκεύσουμε σε έναν πίνακα και σε CSV για να μπορούμε να το βρούμε εύκολα.

#+NAME: cod_data_processing
#+BEGIN_SRC julia :noweb no-export

  <<cod_data_reading>>

  fw_analyses_temp = [pop!(cod_20_22_03), pop!(cod_50_22_03), pop!(cod_50_22_03), cod_100_22_03...]
  fw_analyses = reshape(fw_analyses_temp, 2, 2)
  labels = ["Soluble", "Total"]
  fw_cod_table = Tables.table(hcat(labels, fw_analyses), header = [:COD, :Low_Dilution, :High_Dilution])
  CSV.write(datadir("exp_pro", "substrate_cod.csv"), fw_cod_table)

  cod_22_03 = hcat(cod_20_22_03, cod_50_22_03)
  cod_26_03 = hcat(cod_20_26_03, cod_50_26_03)
#+END_SRC

#+RESULTS: cod_data_processing
: 4×2 Matrix{Float64}:
:  19513.4   22242.0
:  16371.3   13672.6
:   9087.24  19623.6
:   8135.08  22480.1

Για τα αποτελέσματα αυτά αξίζουν κάποια σχόλια. Το ~fw_analyses~ έχει 4 αναλύσεις για τα FW. Από το labeled table που φτιάχτηκε, εξηγείται πως οι σειρές εκφράζουν το soluble και total COD ενώ οι στήλες εκφράζουν την αραίωση που χρησιμοποιήθηκε. Για το διαλυτό, οι αραιώσεις ήταν 20/50, για το ολικό 50/100.

Αξίζει να σημειωθεί πως 2 από τις 4 μετρήσεις είναι κοντά στο όριο απόρριψης (μη γραμμική περιοχή) και μία είναι αρκετά μετά. Η καμπύλη έχει βαθμονομηθεί μέχρι 1 g/l, το οποίο έχει απορρόφηση 0.416. Οπότε, το 0.399 του soluble στη χαμηλή αραίωση και το 0.405 του total είναι κοντά σε αυτό, αλλά είναι μάλλον σωστά επειδή είναι λιγό πριν την γραμμική περιοχή. Για το διαλυτό, αυτό επιβεβαιώνεται καθώς η αραίωση 1:50 έχει μικρή σχετικά απόκλιση (13%) από την 1:20. Ως αντιπρωσοπευτική μπορεί να χρησιμοποιηθεί ο μέσος όρος. Για το ολικό, η αραίωση 1:50 είναι πολύ εκτός της γραμμικής περιοχής (απορρόφηση 0.447) και για αυτό, έχει τεράστια απόκλιση από το αποτέλεσμα της 1:100 (45%). Πιο έγκυρη είναι προφανώς η δεύτερη, αλλά με μία επιφύλαξη και σε αυτήν. Από αυτά, μπορούμε να υπολογίσουμε και την αρχική διαλυτοποιήση των FW ως λόγο sCOD/tCOD, η οποία βγαίνει αρκετά μικρή, κάτι το οποίο ενισχύει την σκέψη πως πρέπει να γίνει μία καλή υδρόλυση πριν την χώνευση.

Για το αρχικό COD των 4 πειραμάτων, αξίζει να σημειωθεί πως (όπως θα αναμενόταν κιόλας), τα περισσότερα αποτελέσματα είναι κοντά μεταξύ τους. Επίσης, φαίνεται πως μόνο και μόνο με την διαλυτοποίηση του υποστρώματος σε νερό και ανάδευση για 5 λεπτά (όταν πάρθηκε της στιγμής 0), η διαλυτοποίηση του δείγματος έχει αυξηθεί αρκετά (σχεδόν διπλασιασμός σε κάποιες περιπτώσεις).

Για τα τελικά COD, υπάρχουν σίγουρα κάποια λάθη. Αρχικά, το ολικό COD του δεύτερου πειράματος (1 ml mix) είναι πολύ μικρό, το οποίο σημαίνει πως είναι σίγουρα εσφαλμένο (μικρότερο από το sCOD, κάτι που δεν μπορεί να είναι σωστό). Εκτός από αυτό, το διαλυτό για το πείραμα χωρίς προσθήκη ενζύμων έχει απορρόφηση οριακά εκτός της γραμμικής περιοχής. Αυτό σημαίνει πως δεν είναι έμπιστη μέτρηση. Βέβαια, το γεγονός ότι το διαλυτό COD είναι κοντά στην τιμή αυτή ενώ το ολικό βγήκε 22242 mg/l είναι περίεργο καθώς σε κανένα άλλο πείραμα δεν διαπιστώθηκε τόσο μεγάλη διαλυτοποίηση. Βέβαια, το δείγμα αυτό είχε μία μεγάλη ιδιαιτερότητα πως έδωσε διήθημα 1.5 ml από δείγμα 6 ml, ενώ σχεδόν κάθε πείραμα έχει δώσει διήθημα της τάξης των 4-5 ml (καθώς τα υδρολύματα αυτά έχουν γενικά λίγα στερεά). Είναι πιθανό πως υπήρξε κάποιο λάθος στην διήθηση του και προέκυψε ένα πολύ πιο πυκνό διήθημα από ότι έπρεπε. Ακόμη, το διαλυτό του δεύτερου πειράματος βγήκε αναπάντεχο υψηλό (16371.29 mg/l). Αυτό είναι εντός γραμμικής περιοχής και με την τιμή που αναμένουμε να έχει το tCOD είναι χαμηλότερο αυτού, αλλά έχει μία διαλυτοποίηση της τάξης του 80%. Αυτό είναι αναπάντεχα υψηλό και δεν συμφωνεί με προηγούμενα πειραματικά αποτελέσματα, αλλά δεν υπάρχει κάποια καλή αιτιολόγηση για το γιατί είναι λάθος (όπως στο s0 ότι το διήθημα είχε πολύ μικρό όγκο ή το t1 το οποίο βγήκε πολύ μικρό και δεν έχει λογική να έχει αυτή την τιμή). Για τον λόγο αυτό, διαλυτοποίηση θα υπολογιστεί μόνο για τα 2 τελευταία δείγματα (2 και 4 ml mix) μέχρι να διευθετηθεί τι συνέβη με τα 2 πρώτα.

#+NAME: fw_liquefaction
#+BEGIN_SRC julia

  fw_liquefaction = (sum(fw_analyses[1,:])/2)/fw_analyses[2,2]
  hyd_22_03 = [cod_22_03[i, 1]/cod_22_03[i, 2] for i in 1:4]
  hyd_26_03 = [cod_26_03[i, 1]/cod_26_03[i, 2] for i in 3:4]

#+END_SRC

#+RESULTS: fw_liquefaction
: 2-element Vector{Float64}:
:  0.46307779906037544
:  0.36187970316688156

Μπορεί να γίνει το σχόλιο πως πρακτικά δεν έγινε καμία επιπλέον διαλυτοποίηση/υδρόλυση στις 4 μέρες αυτές και έγινε μόνο μία ζύμωση (αλλαγή του COD) το οποίο δεν είναι το θεωρητικά αναμενόμενο αποτέλεσμα της διεργασίας, αλλά είναι σε καλύτερη συμφωνία με τα προηγούμενα πειραματικά αποτελέσματα.

* Plotting
Έχοντας μελετήσει τα αποτελέσματα που προέκυψαν από τις αναλύσεις αυτές και τα πιθανά αίτια σφάλματος τους, μένει να κάνουμε ένα καλό visualization το οποίο θα μας δώσει μία καλύτερη εικόνα των COD που μετρήθηκαν. Θα γίνουν 4 διαγράμματα, 2 διαφορετικών ειδών. Το ένα είδος θα είναι η σύγκριση sCOD και tCOD την ίδια χρονική στιγμή, το οποίο είναι σημαντικό για την ποσοτικοποιήση της διαλυτοποίησης, το οποίο θα γίνει με groupedbars ενώ το άλλο θα είναι η χρονική εξέλιξη του sCOD και του tCOD για όλα τα δείγματα σε scatter plot το οποίο θα έχει ως σκοπό την σύγκριση των δειγμάτων μεταξύ τους και της εξέλιξης τους.

#+NAME: cod_plots
#+BEGIN_SRC julia :noweb no-export
  using StatsPlots

  <<cod_data_processing>>

  plotype = "bar_plot"
  date = "26_03"
  cod_bar_22_03 = groupedbar(1:4, [cod_22_03[:, 1]./1000 cod_22_03[:, 2]./1000], xticks = (1:4, ["0", "1", "2", "4"]), xlabel = "Mix Amount (ml)", ylabel = "COD (g/l)", label = ["Soluble" "Total"], title = "COD at t=0 h")
  savefig(cod_bar_22_03, get_plot_name("cod_init", date, plotype))

  cod_bar_26_03 = groupedbar(1:4, [cod_26_03[:, 1]./1000 cod_26_03[:, 2]./1000], xticks = (1:4, ["0", "1", "2", "4"]), xlabel = "Mix Amount (ml)", ylabel = "COD (g/l)", label = ["Soluble" "Total"], title = "COD at t=72 h")
  savefig(cod_bar_26_03, get_plot_name("cod_final", date, plotype))

  colorvec = ["navy" "crimson" "orange" "olive"]

  plotype = "scatter"
  soluble_cod_scatter = plot(1:2, [[cod_22_03[i, 1]/1000, cod_26_03[i, 1]/1000] for i in 1:4], xticks = (1:2, ["0", "72"]), xlabel = "Time (h)", ylabel = "COD (g/l)", label = ["0 ml" "1 ml" "2 ml" "4 ml"], title = "Soluble COD", linecolor = colorvec)
  scatter!(1:2, [[cod_22_03[i, 1]/1000, cod_26_03[i, 1]/1000] for i in 1:4], markersize = 6, label = ["0 ml" "1 ml" "2 ml" "4 ml"], markercolor = colorvec)
  savefig(soluble_cod_scatter, get_plot_name("soluble_cod", date, plotype))

  total_cod_scatter = plot(1:2, [[cod_22_03[i, 2]/1000, cod_26_03[i, 2]/1000] for i in 1:4], xticks = (1:2, ["0", "72"]), xlabel = "Time (h)", ylabel = "COD (g/l)", label = ["0 ml" "1 ml" "2 ml" "4 ml"], title = "Total COD", linecolor = colorvec)
  scatter!(1:2, [[cod_22_03[i, 2]/1000, cod_26_03[i, 2]/1000] for i in 1:4], markersize = 6, label = ["0 ml" "1 ml" "2 ml" "4 ml"], markercolor = colorvec)
  savefig(total_cod_scatter, get_plot_name("total_cod", date, plotype))

  complete_cod_plot = plot(cod_bar_22_03, cod_bar_26_03, soluble_cod_scatter, total_cod_scatter, size = (900, 600))
  savefig(complete_cod_plot, get_plot_name("complete_cod", date, "plot"))
#+END_SRC

#+RESULTS: cod_plots
: "/home/vidianos/Documents/9o_εξάμηνο/Masters_Thesis/plots/26_03/complete_cod_plot_26_03.png"
